pipeline{
    agent any;
     tools{
       maven 'maven'
       jdk 'JDK11'
        }
    stages{
        
        stage('Fetch project from github'){
            steps{
                git branch: 'master', url: 'https://github.com/linubajy/todo-app.git'
            }
                
        }
        stage("build"){
            steps{
                sh 'mvn clean'
                sh 'mvn -f app/pom.xml compile'
            }
            post{
                success{
                    echo "========Maven compile stage executed successfully========"
                }
                failure{
                    echo "========Maven compile stage execution failed========"
                }
            }
        }
    
     stage("Test"){
            steps{
                echo "Maven Test"
                sh 'mvn -f app/pom.xml -Dmaven.test.failure.ignore=true  test'
            }
            post{
                success{
                    junit 'app/target/surefire-reports/*.xml'
                    echo "========Maven Test stage executed successfully========"

                }
                failure{
                    echo "========Maven Test stage execution failed========"
                }
            }
        }
        stage("Packaging"){
            steps{
                echo "Maven Packaging"
                sh 'mvn -f app/pom.xml -Dmaven.test.failure.ignore=true package'
            }
       
        }
        
        stage('sonar analysis'){
            agent any
            steps{
                withSonarQubeEnv('sonarCloudID'){
                    echo 'Performing SonarQube Analysis'
                    sh 'mvn -f app/pom.xml package sonar:sonar'
                }
            }
            post{
                success{
                    echo "========Code Analysis stage executed successfully========"

                }
                failure{
                    echo "========Code Analysis stage execution failed========"
                }
            }
            
        }
        
         stage("Quality Gate") {
            steps {
              
              timeout(time: 1, unit: 'HOURS') {
                script{
                        def qg = waitForQualityGate() 
                        if (qg.status != 'OK')
                        {
                            error "Pipeline failed due to gate failure "
                            
                         }
                    }
              }
             
            }
            
            post {  
            success {
                echo ' SonarQube Analysis complete'
                
                 
                }
            failure {  
             echo 'SonarQube Analysis Failed'
             
            }    
          }
        }  
        
     }
     
      post{
       
        success{
            echo "========pipeline executed successfully ========"
        }
        failure{
            echo "========pipeline execution failed========"
        }
    }
     
     
}
